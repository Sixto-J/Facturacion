CREATE DATABASE IF NOT EXISTS gestion;
USE gestion;
SHOW TABLES FROM gestion;
DROP DATABASE gestion;


DROP TABLE IF EXISTS clientes;
SELECT * FROM clientes;
DROP TABLE IF EXISTS clientes;

INSERT INTO clientes (nombreCliente, direccionCliente, cpCliente, poblacionCliente, provinciaCliente, paisCliente, cifCliente, telCliente, emailCliente, ibanCliente, riesgoCliente, descuentoCliente, observacionesCliente)
VALUES ('Tom B. Erichsen', 'Cardenal ReigSkagen 21', '07005', 'Palma', 'Stavanger', 'Norway', '12033440K', '9791277377', 'miemail@gmail.com', 'IBAN-02', 80, 20, 'Falta pagar la última cuota');

SELECT * FROM clientes;



-- Tabla: facturasClientes
CREATE TABLE facturasClientes (
idFacturaCliente INT AUTO_INCREMENT PRIMARY KEY,
numeroFacturaCliente INT NOT NULL UNIQUE,
fechaFacturaCliente DATE NOT NULL,
idClienteFactura INT NOT NULL,
baseImponibleFacturaCliente DECIMAL(20,10) NOT NULL,
ivaFacturaCliente DECIMAL(4,2) NOT NULL,
totalFacturaCliente DECIMAL(20,10) NOT NULL,
hashFacturaCiente VARCHAR(512),
qrFacturaCliente VARCHAR(4256),
cobradaFactura BOOLEAN NOT NULL,
formaCobroFactura INT NOT NULL,
fechaCobroFactura DATE NOT NULL,
observacionesFacturaClientes TEXT,
KEY `idClienteFactura` (`idClienteFactura`),
CONSTRAINT `facturasclientes_ibfk_1` FOREIGN KEY (`idClienteFactura`) REFERENCES `clientes` (`idCliente`)
);
DROP TABLE facturasClientes;

-- Tabla: articulos
CREATE TABLE articulos (
idArticulo INT AUTO_INCREMENT PRIMARY KEY,
codigoArticulo VARCHAR(40) NOT NULL UNIQUE,
codigoBarrasArticulo VARCHAR(80),
descripcionArticulo VARCHAR(60),
costeArticulo DOUBLE,
margenComercialArticulo DOUBLE,
pvpArticulo DOUBLE,
proveedorArticulo INT,
stockArticulo DOUBLE,
observacionesArticulo TEXT,
familiaArticulo INT,


KEY `familiaArticulo` (`familiaArticulo`),
KEY `proveedorArticulo` (`proveedorArticulo`),
CONSTRAINT `articulos_ibfk_1` FOREIGN KEY (`familiaArticulo`) REFERENCES `familiaArticulos` (`idFamiliaArticulos`),
CONSTRAINT `articulos_ibfk_2` FOREIGN KEY (`proveedorArticulo`) REFERENCES `proveedores` (`idProveedor`)
);


-- Tabla: familiaArticulos
CREATE TABLE IF NOT EXISTS familiaArticulos (
idFamiliaArticulos INT AUTO_INCREMENT PRIMARY KEY,
codigoFamiliaArticulos VARCHAR(40) NOT NULL UNIQUE,
denominacionFamilias VARCHAR(80) NOT NULL UNIQUE,
tipoIVA INT,
FOREIGN KEY (tipoIVA) REFERENCES tiposIVA(idTipoIvA)
);


-- Tabla: rectificativasClientes
CREATE TABLE IF NOT EXISTS rectificativasClientes (
idRectificativaCliente INT AUTO_INCREMENT PRIMARY KEY,
numeroRectificativaCliente INT NOT NULL UNIQUE,
fechaRectificativaCliente DATE NOT NULL,
idClienteRectificativaCliente INT NOT NULL,
baseImponibleRectificativaCliente DOUBLE NOT NULL,
ivaRectificativaCliente DOUBLE NOT NULL,
totalRectificativaCliente DOUBLE NOT NULL,
hashRectificativaCliente VARCHAR(128),
qrRectificativaCliente VARCHAR(4296),
observacionesRectificativaCliente TEXT,

KEY `idClienteRectificativaCliente` (`idClienteRectificativaCliente`),
CONSTRAINT `rectificativasclientes_ibfk_1` FOREIGN KEY (`idClienteRectificativaCliente`) REFERENCES `clientes`(`idCliente`)
);

DROP TABLE rectificativasClientes;

-- Tabla: lineasFacturasClientes
CREATE TABLE IF NOT EXISTS lineasFacturasClientes (
idLineaFacturaCliente INT AUTO_INCREMENT PRIMARY KEY,
numeroFacturaCliente INT NOT NULL,
idArticulo INT NOT NULL,
descripcionArticulo VARCHAR(80) NOT NULL,
codigoArticulo VARCHAR(40) NOT NULL,
pvpArticulo DOUBLE NOT NULL,
ivaArticulo DOUBLE NOT NULL,
idProveedorArticulo INT NOT NULL,
nombreProveedorArticulo VARCHAR(80),
KEY `numeroFacturaCliente` (`numeroFacturaCliente`),
KEY `idArticulo` (`idArticulo`),
KEY `idProveedorArticulo` (`idProveedorArticulo`),
CONSTRAINT `lineasfacturasclientes_ibfk_1` FOREIGN KEY (`numeroFacturaCliente`) REFERENCES `facturasclientes` (`idFacturaCliente`),
CONSTRAINT `lineasfacturasclientes_ibfk_2` FOREIGN KEY (`idArticulo`) REFERENCES `articulos` (`idArticulo`),
CONSTRAINT `lineasfacturasclientes_ibfk_3` FOREIGN KEY (`idProveedorArticulo`) REFERENCES `proveedores` (`idProveedor`)
);

DROP TABLE lineasFacturasClientes;



-- Tabla: clientes
DROP TABLE IF EXISTS clientes;
-- Tabla: clientes
CREATE TABLE IF NOT EXISTS clientes (
idCliente INT AUTO_INCREMENT PRIMARY KEY,
nombreCliente VARCHAR(80) NOT NULL,
direccionCliente VARCHAR(80),
cpCliente VARCHAR(10),
poblacionCliente VARCHAR(80),
provinciaCliente VARCHAR(60),
paisCliente VARCHAR(60),
cifCliente VARCHAR(12) NOT NULL UNIQUE,
telCliente VARCHAR(16),
emailCliente VARCHAR(80),
ibanCliente VARCHAR(40),
riesgoCliente DECIMAL (6,4),
descuentoCliente DECIMAL (6,4),
observacionesCliente TEXT
);

DROP TABLE clientes;


-- Tabla: tiposIVA
CREATE TABLE IF NOT EXISTS tiposIva (
idTipoIva INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
iva DECIMAL(4,2) NOT NULL,
observacionesTipoIva VARCHAR(40) UNIQUE
);

DROP TABLE tiposIVA;


-- Tabla: formaPago
CREATE TABLE IF NOT EXISTS formaPago (
idFormaPago INT AUTO_INCREMENT PRIMARY KEY,
tipoFormaPago VARCHAR(40) NOT NULL,
fechaCobroFormaPago DATE NOT NULL,
observacionesFormaPago TEXT,
cliente INT,
FOREIGN KEY (cliente) REFERENCES clientes(idCliente)
);


DROP TABLE formaPago;


-- Tabla: proveedores
CREATE TABLE IF NOT EXISTS proveedores (
idProveedor INT AUTO_INCREMENT PRIMARY KEY,
nombreProveedor VARCHAR(80) NOT NULL,
direccionProveedor VARCHAR(80),
cpProveedor VARCHAR(10),
poblacionProveedor VARCHAR(80),
provinciaProveedor VARCHAR(60),
paisProveedor VARCHAR(60),
cifProveedor VARCHAR(12) NOT NULL UNIQUE,
telProveedor VARCHAR(16),
emailProveedor VARCHAR(80),
ibanProveedor VARCHAR(40),
riesgoProveedor DOUBLE,
descuentoProveedor DOUBLE,
observacionesProveedor TEXT
);

DROP TABLE proveedores;



INSERT INTO clientes (nombreCliente, direccionCliente, cpCliente, poblacionCliente, provinciaCliente, paisCliente, cifCliente, telCliente, emailCliente, ibanCliente, riesgoCliente, descuentoCliente, observacionesCliente)
VALUES ('Tom B. Erichsen', 'Cardenal ReigSkagen 21', '07005', 'Palma', 'Stavanger', 'Norway', '12033440K', '9791277377', 'miemail@gmail.com', 'IBAN-02', 80, 20, 'Falta pagar la última cuota');

INSERT INTO tiposIVA(iva,observacionesTipoIva) VALUES (21.0,'General');
INSERT INTO tiposIVA(iva,observacionesTipoIva) VALUES (10.0,'Reducido');
INSERT INTO tiposIVA(iva,observacionesTipoIva) VALUES (4.0,'Superreducido');
SELECT * FROM tiposIVA;

INSERT INTO familiaArticulos (codigoFamiliaArticulos, denominacionFamilias ) VALUES ('01','Material Oficina');
INSERT INTO familiaArticulos (codigoFamiliaArticulos, denominacionFamilias ) VALUES ('02','Logistica');

INSERT INTO proveedores(nombreProveedor, direccionProveedor, cpProveedor, poblacionProveedor, provinciaProveedor, paisProveedor, cifProveedor, telProveedor, emailProveedor, ibanProveedor, riesgoProveedor, descuentoProveedor, observacionesProveedor)
VALUES ('Pepe Blanco','Olmos 34','07005','Palma','Balears','España','00000000E','971223344','pepe_blanco@gmail.com','IBAN-2',50,30,'Los pagos están al día');

INSERT INTO proveedores(nombreProveedor, direccionProveedor, cpProveedor, poblacionProveedor, provinciaProveedor, paisProveedor, cifProveedor, telProveedor, emailProveedor, ibanProveedor, riesgoProveedor, descuentoProveedor, observacionesProveedor)
VALUES ('Nevado','Kasukabe','07006','Palma','Balears','España','111111E','desconocido','nevado@gmail.com','IBAN-2',50,30,'Los huesos están al día');


SELECT nombreProveedor FROM proveedores p JOIN articulos a ON p.idProveedor = a.proveedorArticulo WHERE p.idProveedor = 0;
SELECT * FROM proveedores;
SELECT nombreProveedor FROM proveedores WHERE idProveedor = 1;
SELECT nombreProveedor FROM articulos a INNER JOIN proveedores p ON a.proveedorArticulo = p.idProveedor  WHERE a.codigoArticulo = '555E';
SELECT * FROM familiaArticulos;
DROP TABLE familiaArticulos;

INSERT INTO articulos (codigoArticulo, codigoBarrasArticulo, descripcionArticulo, costeArticulo, margenComercialArticulo, pvpArticulo, proveedorArticulo, stockArticulo, observacionesArticulo, familiaArticulo)
VALUES('555E','678OR','Lapices',10.0, 5.3,15.3,1,500,'Estuche de 10 lápices', 01);
INSERT INTO articulos (codigoArticulo, codigoBarrasArticulo, descripcionArticulo, costeArticulo, margenComercialArticulo, pvpArticulo, proveedorArticulo, stockArticulo, observacionesArticulo, familiaArticulo)
VALUES('5455E','3368OR','Lapices',6070.3, 2500.5, 8570.8, 1, 1,'Furgoneta', 02);

DROP TABLE articulos;

SELECT ti.idTipoIva
FROM tiposIVA ti
WHERE ti.idTipoIva = (
    SELECT fa.tipoIVA
    FROM familiaArticulos fa
    WHERE fa.idFamiliaArticulos = (
        SELECT a.familiaArticulo
        FROM articulos a
        WHERE a.codigoArticulo = '5455E'
    )
);